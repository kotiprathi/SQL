USE DATABASE SQL_DATABASE;

CREATE OR REPLACE TABLE PK_SALES
(
  customer_id VARCHAR(1) PRIMARY KEY ,            -- primary key constraint(IN SNOWFLAKE PRIMARY KEY AND NOT NULL IS NOT ENFORCED(NOT VALID))
  order_date DATE DEFAULT TO_DATE('2022-12-10'),  -- default constraint
  product_id INT not null);                       -- not null constraint
  
INSERT INTO PK_SALES
VALUES
('A', '2021-01-01', '1'),
('A', '2021-01-01', '2'),
('A', '2021-01-07', '2'),
('A', '2021-01-10', '3'),
('A', '2021-01-11', '3'),
('A', '2021-01-11', '3'),
('B', '2021-01-01', '2'),
('B', '2021-01-02', '2'),
('B', '2021-01-04', '1'),
('B', '2021-01-11', '1'),
('B', '2021-01-16', '3'),
('C','2021-01-07', '3'),
('d','2021-01-23', 4);

INSERT INTO PK_SALES(customer_id,product_id) -- not provided order_date value because it is default
VALUES('E',5);

DESCRIBE TABLE PK_SALES;
SELECT * FROM PK_SALES;
 
-- if u want to create a table structure like previously created table go with like command
CREATE OR REPLACE TABLE PK_SALES_COPY LIKE PK_SALES;
DESCRIBE TABLE PK_SALES_COPY;
SELECT * FROM PK_SALES_COPY;
 
-- if u want to create a table structure like previously created table along with data then use below query
CREATE OR REPLACE TABLE PK_SALES_COPY_DATA AS 
SELECT * FROM PK_SALES;
DESCRIBE TABLE PK_SALES_COPY_DATA;
SELECT * FROM PK_SALES_COPY_DATA;
 
-- if u want to create a table structure like previously crate table along with data but few columns then use below query
CREATE OR REPLACE TABLE PK_SALES_COPY_DATA_COL AS 
SELECT CUSTOMER_ID,ORDER_DATE FROM PK_SALES;
DESCRIBE TABLE PK_SALES_COPY_DATA_COL;
SELECT * FROM PK_SALES_COPY_DATA_COL;
 

ALTER TABLE PK_SALES 
--ADD COLUMN AGE INT NOT NULL;  
--(ABOVE QUERY WILL GIVE ERROR, WE CANNOT USE NOT NULL CONSTRAINT WHEN ADDING NEW COLUMN BECAUSE THE TABLE IS NOT EMPTY, WE CAN USE IT WHEN THE TABLE IS EMPTY)
ADD COLUMN AGE INT DEFAULT 35;
SELECT * FROM PK_SALES;

-- if u want to create a table structure like previously created table go with like command
CREATE OR REPLACE TABLE PK_SALES_COPY LIKE PK_SALES; -- PK_SALES_COPY table is empty because only structure is copied but not data
ALTER TABLE PK_SALES_COPY
ADD COLUMN ADDRESS VARCHAR(20) NOT NULL;  -- NOW WE CAN USE NOT NULL BECAUSE PK_SALES_COPY TABLE IS EMPTY

SELECT * FROM PK_SALES_COPY;

ALTER TABLE PK_SALES
ADD COLUMN COUNTRY VARCHAR(20) DEFAULT 'NONE';
SELECT * FROM PK_SALES;


ALTER TABLE PK_SALES_COPY_DATA
ADD COLUMN pan_no VARCHAR(10) DEFAULT 'NONE';  -- WE CAN USE DEFAULT CONSTRAINT WHEN USING ALTER

DESCRIBE TABLE PK_SALES_COPY_DATA;

--ADD A COLUMN AND MAKE THAT PRIMARY KEY - ONLY WHEN TABLE IS EMPTY
ALTER TABLE PK_SALES_COPY
DROP PRIMARY KEY;

ALTER TABLE PK_SALES_COPY  -- THIS TABLE IS EMPTY
ADD COLUMN PHONE_NO VARCHAR(10) PRIMARY KEY;

-- WHEN TABLE IS NOT EMPTY THE ABOVE SYNTAX WONT WORK THEN USE NEXT QUERY
ALTER TABLE PK_SALES_COPY_DATA -- THIS TABLE IS NOT EMPTY
ADD COLUMN pan_no VARCHAR(10) PRIMARY KEY; 
-- SQL compilation error: Non-nullable column 'PAN_NO' cannot be added to non-empty table 'PK_SALES_COPY_DATA' unless it has a non-null default value.
-- CANNOT BE ADDED
SELECT * FROM PK_SALES_COPY_DATA;

-- ADD PRIMARY KEY TO EXISTING COLUMN WHEN TABLE IS NOT EMPTY
ALTER TABLE PK_SALES_COPY_DATA
ADD CONSTRAINT PK_CONST_CUST_ID PRIMARY KEY(CUSTOMER_ID);

DESCRIBE TABLE PK_SALES_COPY_DATA;
--OR WE CAN USE BELOW QUERY
-- ADD PRIMARY KEY TO EXISTING COLUMN
ALTER TABLE PK_SALES_COPY_DATA
ADD PRIMARY KEY (CUSTOMER_ID);

DESCRIBE TABLE PK_SALES_COPY_DATA;
SELECT * FROM PK_SALES_COPY_DATA;

-- DROP THE PRIMARY KEY IF EXISTS
ALTER TABLE PK_SALES_COPY_DATA
DROP PRIMARY KEY;
DESCRIBE TABLE PK_SALES_COPY_DATA;

-- DROP THE PRIMARY KEY EXISTS AND ADD THE NEW COLUMN FIRST AND THEN MAKE IT PRIMARY KEY USING 2 STEP PROCESS
ALTER TABLE PK_SALES_COPY_DATA
DROP PRIMARY KEY;

ALTER TABLE PK_SALES_COPY_DATA
ADD COLUMN PHONE_NO VARCHAR(10);

ALTER TABLE PK_SALES_COPY_DATA
ADD PRIMARY KEY (PHONE_NO);

DESCRIBE TABLE PK_SALES_COPY_DATA;


select get_ddl('table','PK_SALES');

UPDATE PK_SALES
SET AGE = '40' WHERE CUSTOMER_ID = 'E';
SELECT * FROM PK_SALES;

UPDATE PK_SALES
SET COUNTRY = 'xxxxxx' WHERE COUNTRY = 'NONE';


------------------------------------------COMBINING ALL----------------------------------
use database SQL_DATABASE;

----WHEN THERE IS NO DATA AVAIALBLE --HARDLY 1-5 % IN REALITY 
CREATE OR REPLACE TABLE PK_SALES 
(
  customer_id VARCHAR(1) PRIMARY KEY ,
  order_date DATE DEFAULT TO_DATE('2022-12-10'),
  product_id INT not null);
DESCRIBE TABLE PK_SALES;

CREATE OR REPLACE TABLE  PK_SALES_COPY LIKE PK_SALES;
DESCRIBE TABLE PK_SALES_COPY;

ALTER TABLE PK_SALES_COPY
DROP PRIMARY KEY;

alter table PK_SALES_COPY
ADD column aadhar_no varchar(15) PRIMARY KEY;
DESCRIBE TABLE PK_SALES_COPY;

----WHEN THERE IS DATA AVAIALBLE --HARDLY 1-5 % IN REALITY 
DESCRIBE TABLE PK_SALES;
INSERT INTO PK_SALES
VALUES
('A', '2021-01-01', '1'),
('A', '2021-01-01', '2'),
('A', '2021-01-07', '2'),
('A', '2021-01-10', '3'),
('A', '2021-01-11', '3'),
('A', '2021-01-11', '3'),
('B', '2021-01-01', '2'),
('B', '2021-01-02', '2'),
('B', '2021-01-04', '1'),
('B', '2021-01-11', '1'),
('B', '2021-01-16', '3'),
('C','2021-01-07', '3'),
('d','2021-01-23', 4); 

INSERT INTO PK_SALES(customer_id,product_id)
VALUES('E',5); 

SELECT DISTINCT * FROM PK_SALES;

CREATE OR REPLACE TABLE  PK_SALES_COPY_DATA AS
SELECT * FROM PK_SALES;

SELECT * FROM PK_SALES_COPY_DATA;

DESCRIBE TABLE PK_SALES_COPY_DATA;

ALTER TABLE PK_SALES_COPY_DATA
DROP PRIMARY KEY;

alter table PK_sales_copy_data
ADD column aadhar_no varchar(15);

-- ADD THE COLUMN FIRST AND THEN MAKE IT PK USING 2 STEP PROCESS
alter table PK_sales_copy_data
ADD PRIMARY KEY (aadhar_no);

DESCRIBE TABLE PK_SALES_COPY_DATA;
