USE DATABASE SQL_DATABASE;

CREATE OR REPLACE TABLE PK_WIN_EMPLOYEE
(
   EMPID INTEGER NOT NULL PRIMARY KEY,
   EMP_NAME VARCHAR2(20),
   JOB_ROLE STRING,
   SALARY NUMBER(10,2)
);

INSERT INTO PK_WIN_EMPLOYEE
VALUES('101','ANAND JHA','Analyst',50000);

INSERT INTO PK_WIN_EMPLOYEE
VALUES(102,'ALex', 'Data Enginner',60000);

INSERT INTO PK_WIN_EMPLOYEE
VALUES(103,'Ravi', 'Data Scientist',48000);

INSERT INTO PK_WIN_EMPLOYEE
VALUES(104,'Peter', 'Analyst',98000);

INSERT INTO PK_WIN_EMPLOYEE
VALUES(105,'Pulkit', 'Data Scientist',72000);

INSERT INTO PK_WIN_EMPLOYEE
VALUES(106,'Robert','Analyst',100000);

INSERT INTO PK_WIN_EMPLOYEE
VALUES(107,'Rishabh','Data Engineer',67000);

INSERT INTO PK_WIN_EMPLOYEE
VALUES(108,'Subhash','Manager',148000);

INSERT INTO PK_WIN_EMPLOYEE
VALUES(109,'Michaeal','Manager',213000);

INSERT INTO PK_WIN_EMPLOYEE
VALUES(110,'Dhruv','Data Scientist',89000);

INSERT INTO PK_WIN_EMPLOYEE
VALUES(111,'Amit Sharma','Analyst',72000);

DELETE FROM PK_WIN_EMPLOYEE WHERE EMPID = 110;

SELECT * FROM PK_WIN_EMPLOYEE;

update PK_WIN_EMPLOYEE set job_role='Data Engineer'
where empid=102;

update PK_WIN_EMPLOYEE set salary= 50000
where empid=104;

SELECT JOB_ROLE,SUM(SALARY) FROM PK_WIN_EMPLOYEE 
GROUP BY 1;

SELECT SUM(SALARY) FROM PK_WIN_EMPLOYEE; 
SELECT *,SUM(SALARY) OVER() FROM PK_WIN_EMPLOYEE;  -- SUM(SALARY) WILL BE PLACED OVER ALL THE RECORDS

-- DISPLAY THE TOTAL SALARY PER JOB CATEGORY FOR ALL THE ROWS
SELECT *,MAX(SALARY) OVER(PARTITION BY JOB_ROLE) AS MAX_JOB_SAL FROM PK_WIN_EMPLOYEE;

SELECT *,MAX(SALARY) OVER(PARTITION BY JOB_ROLE) AS MAX_JOB_SAL,
MIN(SALARY) OVER(PARTITION BY JOB_ROLE) AS MIN_JOB_SAL,
SUM(SALARY) OVER(PARTITION BY JOB_ROLE) AS SUM_JOB_SAL 
FROM PK_WIN_EMPLOYEE;

SELECT *,MAX(SALARY) OVER(PARTITION BY JOB_ROLE ORDER BY SALARY DESC) AS MAX_JOB_SAL,
MIN(SALARY) OVER(PARTITION BY JOB_ROLE ORDER BY SALARY DESC) AS MIN_JOB_SAL,
SUM(SALARY) OVER(PARTITION BY JOB_ROLE ORDER BY SALARY DESC) AS SUM_JOB_SAL
FROM PK_WIN_EMPLOYEE;

-- ROW_NUMBER()
SELECT *, ROW_NUMBER() OVER(PARTITION BY JOB_ROLE ORDER BY SALARY) AS ROW_NUM FROM PK_WIN_EMPLOYEE; 
SELECT *, ROW_NUMBER() OVER(ORDER BY SALARY DESC) AS ROW_NUM FROM PK_WIN_EMPLOYEE; 

SELECT * FROM 
(SELECT *, ROW_NUMBER() OVER(PARTITION BY JOB_ROLE ORDER BY SALARY DESC) AS ROW_NUM FROM PK_WIN_EMPLOYEE) WHERE ROW_NUM <= 2;

-- RANK()
SELECT *, ROW_NUMBER() OVER(PARTITION BY JOB_ROLE ORDER BY SALARY) AS PART_ROW_NUM,
RANK() OVER(PARTITION BY JOB_ROLE ORDER BY SALARY) AS RANK
FROM PK_WIN_EMPLOYEE;

-- DENSE_RANK()
SELECT *, ROW_NUMBER() OVER(PARTITION BY JOB_ROLE ORDER BY SALARY DESC) AS PART_ROW_NUM FROM PK_WIN_EMPLOYEE;

SELECT *, ROW_NUMBER() OVER(PARTITION BY JOB_ROLE ORDER BY SALARY) AS PART_ROW_NUM,
RANK() OVER(PARTITION BY JOB_ROLE ORDER BY SALARY) AS RANK,
DENSE_RANK() OVER(PARTITION BY JOB_ROLE ORDER BY SALARY) AS DENSE_RANK
FROM PK_WIN_EMPLOYEE;

SELECT * FROM 
(SELECT *, ROW_NUMBER() OVER(PARTITION BY JOB_ROLE ORDER BY SALARY) AS PART_ROW_NUM,
RANK() OVER(PARTITION BY JOB_ROLE ORDER BY SALARY) AS RANK,
DENSE_RANK() OVER(PARTITION BY JOB_ROLE ORDER BY SALARY) AS DENSE_RANK
FROM PK_WIN_EMPLOYEE) WHERE DENSE_RANK <=2;
  
